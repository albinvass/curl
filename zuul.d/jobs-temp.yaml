- job:
    name: curl-normal-with-openssl-enable-ares
    parent: curl-base
    vars:
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: normal
        C: >-
          --with-openssl
          --enable-ares

- job:
    name: curl-normal-with-openssl-disable-proxy
    parent: curl-base
    vars:
      curl_env:
        T: normal
        C: >-
          --with-openssl
          --disable-proxy

- job:
    name: curl-normal-with-openssl-disable-verbose-notests
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: normal
        C: >-
          --with-openssl
          --disable-verbose
        CPPFLAGS: -Wno-variadic-macros
        NOTESTS: 1

- job:
    name: curl-novalgrind-boringssl-with-openssl
    parent: curl-base
    vars:
      gimme_stable: true
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: novalgrind
        BORINGSSL: "yes"
        C: >-
          --with-openssl={{ ansible_user_dir }}/boringssl
        LD_LIBRARY_PATH: "{{ ansible_user_dir }}/boringssl/lib:/usr/local/lib"

- job:
    name: curl-novalgrind-boringssl-with-openssl-quiche
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: novalgrind
        QUICHE: "yes"
        C: >-
          --with-openssl={{ ansible_user_dir }}/quiche/deps/boringssl/src
          --with-quiche={{ ansible_user_dir }}/quiche/target/release
        LD_LIBRARY_PATH: "{{ ansible_user_dir }}/quiche/target/release:/usr/local/lib"

- job:
    name: curl-debug-rustls
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        T: debug-rustls
        RUSTLS_VERSION: v0.6.0
        C: >-
          --with-rustls={{ ansible_user_dir }}/crust

- job:
    name: curl-debug-bearssl
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        T: debug-bearssl
        BEARSSL: "yes"
        C: >-
          --with-bearssl

- job:
    name: curl-novalgrind-libressl
    parent: curl-base
    vars:
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: novalgrind
        LIBRESSL: "yes"
        C: >-
          --with-openssl={{ ansible_user_dir }}/libressl
        LD_LIBRARY_PATH: "{{ ansible_user_dir }}/libressl/lib:/usr/local/lib"

- job:
    name: curl-novalgrind-ngtcp2-with-openssl
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: novalgrind
        NGTCP2: "yes"
        C: >-
          --with-openssl={{ ansible_user_dir }}/ngbuild
          --with-ngtcp2={{ ansible_user_dir }}/ngbuild
          --with-nghttp3={{ ansible_user_dir }}/ngbuild
        NOTESTS:

- job:
    name: curl-novalgrind-ngtcp2-gnutls
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
        - autogen
        - automake
        - autopoint
        - bison
        - gperf
        - libgmp-dev
        - libopts25-dev
        - libp11-kit-dev
        - libtasn1-6-dev
        - nettle-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: novalgrind
        NGTCP2: "yes"
        GNUTLS: "yes"
        C: >-
          PKG_CONFIG_PATH={{ ansible_user_dir }}/ngbuild 
          --with-gnutls={{ ansible_user_dir }}/ngbuild
          --with-ngtcp2={{ ansible_user_dir }}/ngbuild
          --with-nghttp3={{ ansible_user_dir }}/ngbuild
        NOTESTS:

- job:
    name: curl-debug-wolfssl
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: debug-wolfssl
        WOLFSSL: "yes"
        C: >-
          --with-wolfssl

- job:
    name: curl-debug-openssl3
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: debug
        OPENSSL3: "yes"
        C: >-
          --with-openssl={{ ansible_user_dir }}/openssl3
        LD_LIBRARY_PATH: "{{ ansible_user_dir }}/openssl3/lib:/usr/local/lib"
        TFLAGS: https ftps

- job:
    name: curl-debug-mesalink
    parent: curl-base
    vars:
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: debug-mesalink
        MESALINK: "yes"
        C: >-
          --with-mesalink

- job:
    name: curl-debug-clang-with-openssl
    parent: curl-base
    vars:
      curl_apt_packages:
        - clang-9
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=clang-9
        OVERRIDE_CXX: CXX=clang++-9
        T: debug
        C: >-
          --with-openssl

- job:
    name: curl-debug-clang-disable-alt-svc-with-openssl
    parent: curl-base
    vars:
      curl_apt_packages:
        - clang-9
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        OVERRIDE_CC: CC=clang-9
        OVERRIDE_CXX: CXX=clang++-9
        T: debug
        C: >-
          --with-openssl
          --disable-alt-svc

- job:
    name: curl-debug-clang-with-mbedtls
    parent: curl-base
    vars:
      curl_apt_packages:
        - clang-9
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
        - libmbedtls-dev
      curl_env:
        OVERRIDE_CC: CC=clang-9
        OVERRIDE_CXX: CXX=clang++-9
        T: debug
        C: >-
          --with-mbedtls

- job:
    name: curl-debug-clang-with-gnutls
    parent: curl-base
    vars:
      curl_apt_packages:
        - clang-9
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
        - libgnutls28-dev
      curl_env:
        OVERRIDE_CC: CC=clang-9
        OVERRIDE_CXX: CXX=clang++-9
        T: debug
        C: >-
          --with-gnutls

- job:
    name: curl-debug-clang-with-nss
    parent: curl-base
    vars:
      curl_apt_packages:
        - clang-9
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
        - libnss3-dev
      curl_env:
        OVERRIDE_CC: CC=clang-9
        OVERRIDE_CXX: CXX=clang++-9
        T: debug
        C: >-
          --with-nss
        CPPFLAGS: -isystem /usr/include/nss
        NOTESTS: 1

- job:
    name: curl-iconv-with-openssl
    parent: curl-base
    vars:
      curl_env:
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: iconv
        C: >-
          --with-openssl

- job:
    name: curl-cmake-boringssl-quiche
    parent: curl-base
    vars:
      gimme_stable: true
      curl_apt_packages:
        - libpsl-dev
        - libbrotli-dev
        - libzstd-dev
      curl_env:
        BORINGSSL: "yes"
        QUICHE: "yes"
        OVERRIDE_CC: CC=gcc-8
        OVERRIDE_CXX: CXX=g++-8
        T: cmake
        C: >-
          -GNinja
          -DUSE_QUICHE=1
          -DOPENSSL_ROOT_DIR=$HOME/boringssl
          -DCURL_BROTLI=1
          -DCURL_ZSTD=!
          -TFLAGS="https ftps"
        PKG_CONFIG_PATH: $HOME/quiche/target/release

- project:
    check:
      jobs:
      - curl-normal-with-openssl-enable-ares
      - curl-normal-with-openssl-disable-proxy
      - curl-normal-with-openssl-disable-verbose-notests
      - curl-novalgrind-boringssl-with-openssl
      - curl-debug-rustls
      - curl-debug-bearssl
      - curl-novalgrind-libressl
      - curl-novalgrind-ngtcp2-with-openssl
      - curl-novalgrind-ngtcp2-gnutls
      - curl-debug-wolfssl
      - curl-debug-wolfssl
      - curl-debug-mesalink
      - curl-debug-clang-with-openssl
      - curl-debug-clang-disable-alt-svc-with-openssl
      - curl-debug-clang-with-mbedtls
      - curl-debug-clang-with-gnutls
      - curl-debug-clang-with-nss
      - curl-iconv-with-openssl
      - curl-cmake-boringssl-quiche
